generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String @id @default(cuid())
  sessionToken String @unique
  userId       String
  expires      DateTime
  user         User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String @id @default(cuid())
  name          String?
  email         String? @unique
  emailVerified DateTime?
  image         String?
  Account       Account[]
  Home          Home[]
  Session       Session[]
  UserFavorites UserFavorites[]
  Recipes       Recipe[]
}

model VerificationToken {
  identifier String
  token      String @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserFavorites {
  favoriteUserId String
  favoriteHomeId String
  home           Home @relation(fields: [favoriteHomeId], references: [id])
  user           User @relation(fields: [favoriteUserId], references: [id])

  @@id([favoriteUserId, favoriteHomeId])
}

// Homes
model Home {
  id            String @id @default(cuid())
  image         String?
  title         String
  description   String
  price         Float
  guests        Int
  beds          Int
  baths         Int
  created       DateTime @default(now())
  updated       DateTime @updatedAt
  owner_id      String
  user          User @relation(fields: [owner_id], references: [id])
  UserFavorites UserFavorites[]
}

// Recipes
model Recipe {
  id        String @id @default(cuid())
  name      String
  content   String
  created   DateTime @default(now())
  updated   DateTime @updatedAt
  owner_id  String
  user      User @relation(fields: [owner_id], references: [id])
}